{
    "hints": {
        "opt_in_to_app()void": {
            "call_config": {
                "opt_in": "CALL"
            }
        },
        "deposit(pay)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "withdraw()uint64": {
            "call_config": {
                "close_out": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMucGVyc29uYWxfYmFuay5jb250cmFjdC5QZXJzb25hbEJhbmsuY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9wZXJzb25hbF9iYW5rL2NvbnRyYWN0LnB5OjQKICAgIC8vIGNsYXNzIFBlcnNvbmFsQmFuayhBUkM0Q29udHJhY3QpOgogICAgaW50IDEKICAgIHJldHVybgo="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 2
        }
    },
    "schema": {
        "global": {
            "declared": {
                "depositors": {
                    "type": "uint64",
                    "key": "depositors"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "balance": {
                    "type": "uint64",
                    "key": "balance"
                },
                "optedIn": {
                    "type": "uint64",
                    "key": "optedIn"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "PersonalBank",
        "methods": [
            {
                "name": "opt_in_to_app",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "deposit",
                "args": [
                    {
                        "type": "pay",
                        "name": "ptxn"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "withdraw",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}